#!/bin/bash

if [[ ! $# -eq 1 ]]; then
	>&2 echo yrbc [brainfuck source-code]
	exit 1
fi

program_address=0
bracket_pair=()
bracket_depth=0


if [[ "`uname -a`" = *i686* ]]; then
	RDIR=$(cd $(dirname $0) && pwd)/resources_86cdecl/
elif [[ "`uname -a`" = *aarch64* ]]; then
	RDIR=$(cd $(dirname $0) && pwd)/resources_aarch64/
else
	RDIR=$(cd $(dirname $0) && pwd)/resources/
	if [[ "`uname`" = CYGWIN* ]]; then
		FIRST_PARAMETER_REGISTER=cx
	else
		FIRST_PARAMETER_REGISTER=di
	fi
fi

cat "$RDIR/program_start.s"

for operator in $(cat "$1" | fold -s1); do
	program_address=$(expr $program_address + 1)

	case "$operator" in
		"+")
			cat "$RDIR/operator_plus.s"
			;;

		"-")
			cat "$RDIR/operator_minus.s"
			;;

		"[")
			bracket_pair+=("$program_address")
			bracket_depth=$(expr $bracket_depth + 1)

			cat "$RDIR/operator_bracket_open.s" |
				sed "s/##ID##/$program_address/"
			;;

		"]")
			bracket_depth=$(expr $bracket_depth - 1)

			cat "$RDIR/operator_bracket_close.s" |
				sed "s/##ID##/${bracket_pair[$bracket_depth]}/"

			unset "bracket_pair[$bracket_depth]"

			;;

		">")
			cat "$RDIR/operator_gt.s" |
				sed "s/##ID##/$program_address/"
			;;

		"<")
			cat "$RDIR/operator_lt.s"
			;;

		".")
			cat "$RDIR/operator_dot.s" |
				sed "s/##FIRST_PARAMETER_REGISTER##/$FIRST_PARAMETER_REGISTER/"
			;;

		",")
			cat "$RDIR/operator_comma.s"
			;;

		*)
			>&2 echo "warning: ignore case '$operator'"
			program_address=$(expr $program_address - 1)
			;;
	esac
done

cat "$RDIR/program_end.s"

if [[ $bracket_pair_counter -ne 0 ]]; then
	>&2 echo "error: bracket pair missmatch"
	exit 1
fi

